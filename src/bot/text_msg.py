import logging
from typing import Iterator, Dict
from datetime import datetime

look_calendar = "üîî <b>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ</b>\n\n–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—é –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏ –∑–∞–≤—Ç—Ä–∞"

did_not_look = ("‚ö†Ô∏è <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</b>\n\n–ö—É—Ä—å–µ—Ä <b>–ù–µ –ø–æ—Å–º–æ—Ç—Ä–µ–ª</b> –ø–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—é –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ –°–µ–≥–æ–¥–Ω—è –∏ –ó–∞–≤—Ç—Ä–∞ –∏–ª–∏ –Ω–µ "
                "–æ—Ç–∂–∞–ª –∫–Ω–æ–ø–∫—É |–Ø –ø–æ—Å–º–æ—Ç—Ä–µ–ª|")


def did_look_calendar(user: str = None):
    return f"üîî <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</b>\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user} –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª, —á—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ–ª –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É."


def today_delivery_list(list_order) -> str:
    sorted_list = sorted(list_order, key=lambda r: r.deliver_at)
    logging.info(f"Sorted_list: {sorted_list}")
    res = 'üîî –î–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n'
    for order in sorted_list:
        if not order.self_pickup:
            text = f"{order.deliver_at.strftime('%H:%M')} | <code>{order.adress}</code> | {order.comment}\n"
            res += text
    logging.info(res)

    return res


def job_msg_list(list_order) -> Iterator[Dict[datetime, str]]:
    for order in list_order:
        if not order.self_pickup:
            html = f"""–í—Ä–µ–º—è: {order.deliver_at.strftime('%H:%M')}\n–ò–º—è: {order.client_name}\n–¢–µ–ª–µ—Ñ–æ–Ω: {order.client_phone}\n–ê–¥—Ä–µ—Å: <code>{order.adress}</code>\n–ò–Ω—Ñ–æ: {order.comment}\n–°—É–º–º–∞: <b>{order.price_order} —Ä—É–±.</b>
            """
            yield dict(dt=order.deliver_at, html_msg=html)
